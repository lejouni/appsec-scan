name: "Application Security Analsysis tools"
description: "This action will use other security scanning tools to do different type of security scannings."
author: Jouni Lehto
branding:
  icon: code
  color: blue
inputs:
  #------------Common inputs------------------------#
  log_level:
    description: Logging level. Default is INFO.
    default: INFO
    required: false
  cache: 
    description: Tools can be cached by setting this to true. Default is true.
    required: false
    default: "true"
  build_command:
    description: Application build command. Ex. mvn clean install
    required: false
  github_token:
    description: "Pass the GitHub token to the script in order to create PRs"
    required: false
  bridge_install_folder:
    description: "Install folder for Bridge component"
    default:  /tmp/synopsys-bridge
    required: false
  bridge_platform:
    description: "Bridge platform linux is default. Options are linux64, win64 and macosx"
    default: "linux64"
    required: false
  bridge_version:
    description: "Bridge component version"
    default: "1.0.0"
    required: false
  #------------Polaris related inputs------------------------#
  polaris_project:
    description: Project name, if not given then default=github.repository
    required: false
    default: ${{github.repository}}
  polaris_branch:
    description: Project branch name, if not given then default=github.ref_name
    required: false
    default: ${{github.ref_name}}
  polaris_url:
    description: URL for Polaris where the thin client can be downloaded
    required: true
  polaris_token:
    description: Polaris Access Token
    required: true
  polaris_config_overrides:
    description: "With this you can overriding the configuration file. More info: https://sig-docs.synopsys.com/polaris/topics/c_cli-config-overrides.html"
    required: false
    default: --co analyze.coverity.cov-analyze='["--enable", "HARDCODED_CREDENTIALS", "--security", "--webapp-security", "--android-security"]'
  polaris_analysis_mode:
    description: Analysis mode will tell the action that is local or central analysis requested, Options are local and central (Default).
    required: false
    default: central
  polaris_config_file:
    description: "By giving this input, you specify which polaris.yaml file to use. If this is given, then only configurations given inside of the config file, \
                  will be used. If not given then will set polaris server url with flag -s"
    required: false
  polaris_sarif:
    description: By setting this true, you will get results output as a sarif format file. Default is false.
    required: false
    default: "false"
  polaris_sarif_file:
    description: "If polaris_sarif: true, then this is used, to specify the output file with full path. Default: github.workspace/polaris-scan-results.sarif.json"
    required: false
    default: ${{github.workspace}}/polaris-scan-results.sarif.json
  polaris_issue_status:
    description: Indicates which issues are returned based on the status, if not given, then all are returned. Options are opened,closed.
    required: false
  polaris_install_folder:
    description: To which folder the tools are extracted. Default is /tmp/cache/polaris
    required: false
    default: /tmp/cache/polaris
  polaris_platform:
    description: "What platform of Polaris thin client is needed, example: linux64 (Default). Fow Windows win64 and for MacOS macosx"
    default: "linux64"
    required: false
  polaris_version:
    description: "What version of Polaris thin client is needed, example: 2022.9.0 (Default)"
    default: 2022.9.0
    required: false

  #------------Nextgen Polaris related inputs------------------------#
  polaris_nextgen_project:
    description: Project name, if not given then default=github.repository
    required: false
    default: ${{github.repository}}
  polaris_nextgen_branch:
    description: Project branch name, if not given then default=github.ref_name
    required: false
    default: ${{github.ref_name}}
  polaris_nextgen_url:
    description: URL for Polaris where the thin client can be downloaded
    required: true
  polaris_nextgen_token:
    description: Polaris Access Token
    required: true
  polaris_nextgen_sarif:
    description: By setting this true, you will get results output as a sarif format file. Default is false.
    required: false
    default: "false"
  polaris_nextgen_sarif_file:
    description: "If polaris_sarif: true, then this is used, to specify the output file with full path. Default: github.workspace/polaris-scan-results.sarif.json"
    required: false
    default: ${{github.workspace}}/polaris-scan-results.sarif.json
  #------------Black Duck related inputs------------------------#
  blackduck_url:
    description: URL for Black Duck where the thin client can be downloaded
    required: true
  blackduck_token:
    description: Black Duck Access Token
    required: true
  blackduck_project:
    description: Project name in Black Duck, if not given then default=github.repository
    required: false
    default: ${{github.repository}}
  blackduck_version:
    description: "Project version name in Black Duck. Defaul is github.ref_name"
    required: false
    default: ${{github.ref_name}}
  blackduck_detect_opts:
    description: "Additional detect options. Comma separated list."
    required: false
    default: detect.tools="ALL"
  blackduck_policy_categories:
    description: "Which policy category vulnerabilites are returned. SECURITY is default."
    required: false
    default: SECURITY #Options are [COMPONENT,SECURITY,LICENSE,UNCATEGORIZED,OPERATIONAL]
  blackduck_sarif:
    description: By setting this true, you will get results output as a sarif format file. Default is false.
    required: false
    default: "false"
  blackduck_full_scan:
    description: Setting this to true, black duck full scan is executed, otherwise if blackduck is true, then RAPID -scan is done.
    default: "false"
    required: false
  blackduck_policies:
    description: "If given, policy information is added"
    default: "false"
    required: false
  blackduck_rapid_compare_mode:
    description: "ALL - The default and existing Rapid Scan mode. The output is the same as before, no BOM comparisons are done. \ 
                  BOM_COMPARE_STRICT - If the policy violation was already known and visible in the project version's component page (active or overridden), it will not be in the Rapid Scan results. Only new violations found in the scanned project and cleared violations are returned. Only policy rules that are relevant to Rapid Scans and project version BOMs will be evaluated (those with Rapid and Full scan modes selected). \
                  BOM_COMPARE - Evaluates all policy rules that 'ALL' mode does but will apply the 'BOM_COMPARE_STRICT' logic to relevant policy rules (those with Rapid and Full scan modes selected)."
    default: ALL
    required: false
  #------------CNC related inputs------------------------#
  cnc_url:
    description: URL for CNC.
    required: true
  cnc_username:
    description: Coverity Connect username
    required: true
  cnc_passphare:
    description: Coverity Connect password
    required: true
  cnc_project:
    description: Project name, if not given then default=github.repository
    required: false
    default: ${{github.repository}}
  cnc_stream:
    description: Project stream name, if not given then default=github.ref_name
    required: false
    default: ${{github.ref_name}}
  cnc_repository_name:
    description: Project repository name
    required: false
  cnc_branche_name:
    description: Project branch name
    required: false
  cnc_sarif:
    description: Project branch name
    required: false
    default: "false"
  cnc_sarif_file:
    description: "If cnc_sarif: true, then this is used, to specify the output file with full path. Default: github.workspace/cnc-scan-results.sarif.json"
    required: false
    default: ${{github.workspace}}/cnc-scan-results.sarif.json
  #------------Which tools are activated------------------------#
  polaris:
    description: "If this is true, then Polaris analysis is done. Default is false."
    required: false
    default: "false"
  polaris_nextgen:
    description: "If this is true, then Nextgen Polaris analysis is done. Default is false."
    required: false
    default: "false"
  blackduck:
    description: "If this is true, then Black Duck analysis is done. Default is false."
    required: false
    default: "false"
  cnc:
    description: "If this is true, then Cloud Native Coverity (CNC) analysis is done. Default is false."
    required: false
    default: "false"

runs:
  using: composite
  steps:
    #---------Cache Bridge tool--------------------------#
    - if: ${{ inputs.cache == 'true'}}
      id: cache-bridge-tools
      uses: actions/cache@v3
      with:
        path: ${{inputs.bridge_install_folder}}
        key: cache-bridge-tools-${{ inputs.bridge_platform }}-${{ inputs.bridge_version }}
    # Download the Bridge tool and extract it
    - if: steps.cache-bridge-tools.outputs.cache-hit != 'true'
      run: |
        mkdir -m 777 -p ${{inputs.bridge_install_folder}}
        cd ${{inputs.bridge_install_folder}}
        wget -q https://sig-repo.synopsys.com/artifactory/bds-integrations-release/com/synopsys/integration/synopsys-bridge/${{inputs.bridge_version}}/synopsys-bridge-${{inputs.bridge_version}}-${{inputs.bridge_platform}}.zip
        unzip -o -q ${{inputs.bridge_install_folder}}/synopsys-bridge-${{inputs.bridge_version}}-${{inputs.bridge_platform}}.zip && rm -rf synopsys-bridge-${{inputs.bridge_version}}-${{inputs.bridge_platform}}.zip
      shell: bash

    #---------Coverity on Polaris------------------------#
    - if: ${{inputs.polaris == 'true'}}
      name: Coverity Commit phase
      uses: synopsys-sig-community/setup-polaris-analysis@main
      with:
        polaris_url: ${{inputs.polaris_url}}
        polaris_token: ${{inputs.polaris_token}}
        polaris_install_folder: ${{inputs.polaris_install_folder}}
        polaris_platform: ${{inputs.polaris_platform}}
        polaris_version: ${{inputs.polaris_version}}
        cache: ${{inputs.cache}}
    - if: ${{inputs.polaris == 'true'}}
      uses: synopsys-sig-community/polaris-analysis@main
      with:
        project: ${{inputs.polaris_project}}
        branch: ${{inputs.polaris_branch}}
        log_level: ${{inputs.log_level}}
        polaris_config_overrides: ${{inputs.polaris_config_overrides}}
        polaris_analysis_mode: ${{inputs.polaris_analysis_mode}}
        polaris_config_file: ${{inputs.polaris_config_file}}
        polaris_sarif: ${{inputs.polaris_sarif}}
        polaris_sarif_file: ${{inputs.polaris_sarif_file}}
        polaris_issue_status: ${{inputs.polaris_issue_status}}
        build_command: ${{inputs.build_command}}
    - if: ${{inputs.polaris_sarif == 'true' && inputs.polaris == 'true'}}
      name: Upload SARIF file
      uses: github/codeql-action/upload-sarif@v2
      with:
        # Path to SARIF file
        sarif_file: ${{inputs.polaris_sarif_file}}
      continue-on-error: true
    - if: ${{inputs.polaris_sarif == 'true' && inputs.polaris == 'true'}}
      name: Archive scanning results
      uses: actions/upload-artifact@v3
      with:
        name: polaris-scan-results
        path: ${{inputs.polaris_sarif_file}}
      continue-on-error: true
    #------------Black Duck ------------------------#
    - if: ${{inputs.blackduck == 'true'}}
      name: Black Duck Analysis with synopsys-action
      uses: synopsys-sig/synopsys-action@v1.4.1
      with:
        blackduck_apiToken: ${{ inputs.blackduck_token }}
        blackduck_url: ${{ inputs.blackduck_url }}
        blackduck_scan_full: ${{ inputs.blackduck_full_scan }}
        github_token: ${{ inputs.github_token }}
        blackduck_automation_fixpr: false
        blackduck_scan_failure_severities: "NONE"
        synopsys_bridge_install_directory: ${{inputs.bridge_install_folder}}
        bridge_download_version: ${{inputs.bridge_version}}
      env:
        DETECT_PROJECT_NAME: ${{inputs.blackduck_project}}
        DETECT_PROJECT_VERSION_NAME: ${{inputs.blackduck_version}}
        DETECT_CODE_LOCATION_NAME: ${{inputs.blackduck_project}}-${{inputs.blackduck_version}}
        DETECT_SCAN_OUTPUT_PATH: ${{github.workspace}}/bd_scan # This needs to be set, because of RAPID scan results
        DETECT_CLEANUP: "false" # This needs to be set, because of RAPID scan results
        DETECT_TIMEOUT: "7200"
        DETECT_DETECTOR_SEARCH_DEPTH: "20"
        DETECT_DETECTOR_SEARCH_CONTINUE: "true"
        DETECT_EXCLUDED_DIRECTORIES_SEARCH_DEPTH: "20"
        DETECT_EXCLUDED_DIRECTORIES: node_modules,detect
        DETECT_NPM_DEPENDENCY_TYPES_EXCLUDED: DEV
        DETECT_TOOLS: "ALL,IAC_SCAN" #All is not activating IaC scan, it needs to be activate separately with IAC_SCAN
        DETECT_BLACKDUCK_SIGNATURE_SCANNER_COPYRIGHT_SEARCH: "true"
        DETECT_BLACKDUCK_SIGNATURE_SCANNER_LICENSE_SEARCH: "true"
        # DETECT_BLACKDUCK_SIGNATURE_SCANNER_ARGUMENTS: "--exclude=/detect/"
        DETECT_BLACKDUCK_SIGNATURE_SCANNER_UPLOAD_SOURCE_MODE: "true"
        DETECT_BLACKDUCK_RAPID_COMPARE_MODE: ${{inputs.blackduck_rapid_compare_mode}} #Options are ALL (default), BOM_COMPARE_STRICT and BOM_COMPARE
      continue-on-error: true

    - if: ${{inputs.blackduck == 'true' && inputs.blackduck_sarif == 'true'}}
      uses: synopsys-sig-community/blackduck-sarif-formatter@dev
      with:
        blackduck_url: ${{ inputs.blackduck_url }}
        blackduck_project: ${{ inputs.blackduck_project }}
        blackduck_version: ${{ inputs.blackduck_version }}
        blackduck_apiToken: ${{ inputs.blackduck_token }}
        blackduck_scan_full: ${{ inputs.blackduck_full_scan }}
        blackduck_outputFile: ${{github.workspace}}/blackduck-sarif.json
        blackduck_scanOutputPath: ${{github.workspace}}/bd_scan
        blackduck_policies: ${{ inputs.blackduck_policies }}
        blackduck_log_level: ${{ inputs.log_level }}

    - if: ${{inputs.blackduck == 'true' && inputs.blackduck_sarif == 'true'}}
      name: Upload SARIF file
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: blackduck-sarif.json
      continue-on-error: true
    - if: ${{inputs.blackduck == 'true' && inputs.blackduck_sarif == 'true'}}
      name: Archive scanning results
      uses: actions/upload-artifact@v3
      with:
        name: bd-scan-results
        path: blackduck-sarif.json
      continue-on-error: true

    #------------Cloud Native Coverity Analysis------------------------#
    - if: ${{inputs.cnc == 'true'}}
      name: CNC Analysis with synopsys-action
      uses: synopsys-sig/synopsys-action@v1.4.1
      with:
        coverity_url: ${{ inputs.cnc_url }}
        coverity_user: ${{ inputs.cnc_username }}
        coverity_passphrase: ${{ inputs.cnc_passphare }}
        coverity_project_name: ${{ inputs.cnc_project }}
        coverity_stream_name: ${{ inputs.cnc_stream }}
        coverity_repository_name: ${{ inputs.cnc_repository_name }}
        coverity_branch_name: ${{ inputs.cnc_branche_name }}
        synopsys_bridge_install_directory: ${{inputs.bridge_install_folder}}
        bridge_download_version: ${{inputs.bridge_version}}
    - if: ${{inputs.cnc == 'true' && inputs.cnc_sarif == 'true'}}
      uses: lejouni/cnc-sarif-formatter@main
      with:
        url: ${{ inputs.cnc_url }}
        username: ${{ inputs.cnc_username }}
        password: ${{ inputs.cnc_passphare }}
        stream: ${{ inputs.cnc_stream }}
        outputFile: ${{inputs.cnc_sarif_file}}

    - if: ${{inputs.cnc == 'true' && inputs.cnc_sarif == 'true'}}
      name: Upload SARIF file
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: ${{inputs.cnc_sarif_file}}
      continue-on-error: true
    - if: ${{inputs.cnc == 'true' && inputs.cnc_sarif == 'true'}}
      name: Archive scanning results
      uses: actions/upload-artifact@v3
      with:
        name: cnc-scan-results
        path: ${{inputs.cnc_sarif_file}}
      continue-on-error: true
    #------------Nextgen Polaris ------------------------#
    - if: ${{inputs.polaris_nextgen == 'true'}}
      name: Nextgen Polaris Analysis with synopsys-action
      uses: synopsys-sig/synopsys-action@v1.4.1
      with:
          polaris_serverUrl: ${{ inputs.polaris_nextgen_url }}
          polaris_accessToken: ${{ inputs.polaris_nextgen_token  }}
          polaris_application_name: ${{ inputs.polaris_nextgen_project }}
          polaris_project_name: ${{ inputs.polaris_nextgen_branch }}
          ### Accepts Multiple Values
          polaris_assessment_types: "SAST,SCA"
          synopsys_bridge_install_directory: ${{inputs.bridge_install_folder}}
          bridge_download_version: ${{inputs.bridge_version}}
